#reverse linkedlist------------------------------------------
class Solution {
    public ListNode reverse(ListNode head, ListNode temp){
        if(head!=null){
            ListNode parent=head.next;
            head.next=temp;
            temp=head;
            head=parent;
            temp=reverse(head,temp);
        }
        return temp;
    }
    public ListNode reverseList(ListNode head) {
        ListNode temp=null;
        return reverse(head,temp);
        
    }
}
time: o(N)
_______________________________________________________
# find middle of linkedlist
class Solution {
    public ListNode middleNode(ListNode head) {
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
        }
        return slow;
    }
}
time: O(N)
__________________________________
