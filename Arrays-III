# count which element ocurs more than n/2 times;--------
class Solution {
    public int majorityElement(int[] nums) {
        int ele=nums[0];
        int c=1;
        for(int i=1;i<nums.length;i++){
            if(c==0){
                ele=nums[i];
                c=1;
            }
            else if(nums[i]!=ele){
                c--;
            }else{
                c++;
            }
        }
        return ele;
    }
}
time: O(n)
______________________________________________________
# grid uniue paths (from top left to bottom right)--------
class Solution {
    public int uniquePaths(int m, int n) {
        int arr[][]=new int[m][n];
        for(int i=0;i<n;i++){
            arr[0][i]=1;
        }
        for(int i=0;i<m;i++){
            arr[i][0]=1;
        }
        for(int i=1;i<m;i++){
            for(int j=1;j<n;j++){
                arr[i][j]=arr[i-1][j]+arr[i][j-1];
            }
        }
        return arr[m-1][n-1];
    }
}
time(n*m)
_______________________________________________
