1) rotate matrix by 90 degree
take transpose and reverse each row

class Solution {
    public void rotate(int[][] matrix) {
        int n=matrix.length;
        int m=matrix[0].length;
        for(int i=0;i<n;i++){
            for(int j=i;j<m;j++){  
                    int temp=matrix[i][j];
                    matrix[i][j]=matrix[j][i];
                    matrix[j][i]=temp;
            }
        } 
        for(int i=0;i<n;i++){
            for(int j=0;j<m/2;j++){
                int temp=matrix[i][j];
                matrix[i][j]=matrix[i][m-1-j];
                matrix[i][m-1-j]=temp;
            }
        }
    }
}
time: n*m
space: constant
________________________________________________
2)
class Solution {
    public int[][] merge(int[][] arr) {
        int n=arr.length;
        Arrays.sort(arr, new Comparator<int[]>() {
            public int compare(int[] a, int[] b) {
                return a[0] - b[0];
            }
        });
        List<List<Integer>> l=new ArrayList<>();
        for(int i=0;i<n;i++){
            if(l.isEmpty() || arr[i][0]>l.get(l.size()-1).get(1)){
                l.add(Arrays.asList(arr[i][0],arr[i][1]));
            }
            else{
                l.get(l.size()-1).set(1,Math.max(arr[i][1],l.get(l.size()-1).get(1)));
            }
        }
        int ans[][]=new int[l.size()][2];
        for(int i=0;i<l.size();i++){
            ans[i][0]=l.get(i).get(0);
            ans[i][1]=l.get(i).get(1);
        }
        return ans;
    }
}
time: 
