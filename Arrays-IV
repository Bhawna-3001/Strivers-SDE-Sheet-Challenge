2sum----------
class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> m=new HashMap<>();
        int ans[]=new int[2];
        ans[0]=ans[1]=-1;
        for(int i=0;i<nums.length;i++){
            int num=nums[i];
            int extra=target-nums[i];
            if(m.containsKey(extra)){
                ans[0]=m.get(extra);
                ans[1]=i;
                return ans;
            }
            m.put(nums[i],i);
        }
        return ans;
    }
}
time: o(nlog(n))
space: n
_________________________________________________________-
#longest consecutive subarray--------------
class Solution {
    public int longestConsecutive(int[] nums) {
        Set<Integer> s=new HashSet<>();
        for(int num:nums){
            s.add(num);
        }
        int len=0;
        for(int num:nums){
            if(!s.contains(num-1)){
                int cur=num;
                int curl=1;
                while(s.contains(cur+1)){
                    cur+=1;
                    curl++;
                }
                len=Math.max(len,curl);
            }
            
        }
        return len;
    }
}
